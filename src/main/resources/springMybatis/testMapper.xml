<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace属性是名称空间，必须唯一 -->
<mapper namespace="mybatis01.testmybatis.entitys.Student">
    <!-- resultMap标签:映射实体与表
       type属性：表示实体全路径名
       id属性：为实体与表的映射取一个任意的唯一的名字
  -->
    <resultMap id="studentMap" type="mybatis01.testmybatis.entitys.Student">
        <!-- id标签:映射主键属性
           result标签：映射非主键属性
           property属性:实体的属性名
           column属性：表的字段名
      -->
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="sal" column="sal"/>
    </resultMap>
    <!--
       //在JDBC中我们通常使用?号作为占位符，而在Mybatis中，我们是使用#{}作为占位符
        //parameterType我们指定了传入参数的类型
        //#{}实际上就是调用了Student属性的get方法
    -->
    <insert id="add" parameterType="mybatis01.testmybatis.entitys.Student">
        INSERT INTO `students`(id,name,sal) values(#{id},#{name},#{sal});
    </insert>

    <select id="findAdd" parameterType="int" resultMap="studentMap">
        select * from `students` where id = #{id};
    </select>

    <select id="findAll"  resultMap="studentMap">
        select * from `students`;
    </select>

    <delete id="deleteById" parameterType="int">
        delete from `students` where id = #{id};
    </delete>

    <select id="pagination" parameterType="map" resultMap="studentMap">
        select * from students limit #{start},#{end};
    </select>

    <update id="updateById" parameterType="mybatis01.testmybatis.entitys.Student">
        update `students` set name = #{name} , sal = #{sal} where id = #{id};
    </update>



</mapper>